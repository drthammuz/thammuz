{"user_input":"I have a gaming group called Golden Gnomes, who are currently on an adventure in Baldur's Gate 3. We have some issues with playing time, since we have to be all 4 available at the same time. I want you to create a humoristic and creative yet helpful flowchart on the process of finding time for BG3. Here is some information about the participants:  Laino is a specialist doctor in psychiatry. he sleeps a lot. and reads a lot. but mostly he is up for some baldurs gate 3.  Lurch has kids and works as a teacher. he prioritizes gaming with his buddies, but since his woman sleeps a lot he must often play muted.  Frederick \"the Vibes\" Wibe has kids and lives in a circus. there are many clowns and animals in this circus and he is often busy taking responsibility for everything going on. the gaming sessions are usually planned based on his schedule since he has the least time for BG3 of everyone in this gaming group.  Thammuz can always play."}
{"gpt_response":{"id":"chatcmpl-8MNxFRII5c5rp7Q0zSKQejsDuflv6","object":"chat.completion","created":1700345989,"model":"gpt-4-1106-preview","choices":[{"index":0,"message":{"role":"assistant","content":"```mermaid\nflowchart TB\n    start((Start)) --> checkFrederick{Check Frederick's Schedule}\n    checkFrederick --> |Free| frederickFree[Frederick is free!]\n    checkFrederick --> |Busy| frederickBusy((Circus Time))\n\n    frederickFree --> checkLurch{Check Lurch's Family Status}\n    frederickBusy -.-> planAhead[Plan gaming session for next Frederick's availability]\n\n    checkLurch --> |Kids asleep & Partner asleep| lurchCanPlay[Lurch can play muted!]\n    checkLurch --> |Otherwise| adjustVolume[Adjust Lurch's gaming volume]\n\n    lurchCanPlay --> checkLaino{Check Laino's Mood}\n    adjustVolume -.-> lurchCanPlay\n\n    checkLaino --> |Up for BG3| lainoReady[Laino is ready!]\n    checkLaino --> |Sleeping or Reading| lureLainoWithLore[Lure Laino with game lore]\n\n    lainoReady --> thammuzCanPlay[Thammuz is always ready]\n    lureLainoWithLore --> thammuzCanPlay\n\n    thammuzCanPlay --> scheduleSession{Schedule Session}\n    scheduleSession --> |Successful| gameOn[Lets venture into Baldur's Gate!]\n    scheduleSession --> |Conflict| negotiation[Negotiate Time Slots]\n\n    negotiation -.-> |Timer Negotiated| gameOn\n    negotiation -.-> |Stalemate| planAhead\n\n    gameOn --> End((END))\n    planAhead -.-> |New Time Found| scheduleSession\n```"},"finish_reason":"stop"}],"usage":{"prompt_tokens":639,"completion_tokens":340,"total_tokens":979},"system_fingerprint":"fp_a24b4d720c"}}
{"mermaid_syntax":"flowchart TB\n    start((Start)) --> checkFrederick{Check Frederick's Schedule}\n    checkFrederick --> |Free| frederickFree[Frederick is free!]\n    checkFrederick --> |Busy| frederickBusy((Circus Time))\n\n    frederickFree --> checkLurch{Check Lurch's Family Status}\n    frederickBusy -.-> planAhead[Plan gaming session for next Frederick's availability]\n\n    checkLurch --> |Kids asleep & Partner asleep| lurchCanPlay[Lurch can play muted!]\n    checkLurch --> |Otherwise| adjustVolume[Adjust Lurch's gaming volume]\n\n    lurchCanPlay --> checkLaino{Check Laino's Mood}\n    adjustVolume -.-> lurchCanPlay\n\n    checkLaino --> |Up for BG3| lainoReady[Laino is ready!]\n    checkLaino --> |Sleeping or Reading| lureLainoWithLore[Lure Laino with game lore]\n\n    lainoReady --> thammuzCanPlay[Thammuz is always ready]\n    lureLainoWithLore --> thammuzCanPlay\n\n    thammuzCanPlay --> scheduleSession{Schedule Session}\n    scheduleSession --> |Successful| gameOn[Lets venture into Baldur's Gate!]\n    scheduleSession --> |Conflict| negotiation[Negotiate Time Slots]\n\n    negotiation -.-> |Timer Negotiated| gameOn\n    negotiation -.-> |Stalemate| planAhead\n\n    gameOn --> End((END))\n    planAhead -.-> |New Time Found| scheduleSession"}
{"mermaid_cli_response":{"svgUrl":"http:\/\/135.181.158.154\/mermaid_images\/image_1700345997580.svg","mmdContent":"flowchart TB\n    start((Start)) --> checkFrederick{Check Frederick's Schedule}\n    checkFrederick --> |Free| frederickFree[Frederick is free!]\n    checkFrederick --> |Busy| frederickBusy((Circus Time))\n\n    frederickFree --> checkLurch{Check Lurch's Family Status}\n    frederickBusy -.-> planAhead[Plan gaming session for next Frederick's availability]\n\n    checkLurch --> |Kids asleep & Partner asleep| lurchCanPlay[Lurch can play muted!]\n    checkLurch --> |Otherwise| adjustVolume[Adjust Lurch's gaming volume]\n\n    lurchCanPlay --> checkLaino{Check Laino's Mood}\n    adjustVolume -.-> lurchCanPlay\n\n    checkLaino --> |Up for BG3| lainoReady[Laino is ready!]\n    checkLaino --> |Sleeping or Reading| lureLainoWithLore[Lure Laino with game lore]\n\n    lainoReady --> thammuzCanPlay[Thammuz is always ready]\n    lureLainoWithLore --> thammuzCanPlay\n\n    thammuzCanPlay --> scheduleSession{Schedule Session}\n    scheduleSession --> |Successful| gameOn[Lets venture into Baldur's Gate!]\n    scheduleSession --> |Conflict| negotiation[Negotiate Time Slots]\n\n    negotiation -.-> |Timer Negotiated| gameOn\n    negotiation -.-> |Stalemate| planAhead\n\n    gameOn --> End((END))\n    planAhead -.-> |New Time Found| scheduleSession","usedSyntax":"flowchart TB\n    start((Start)) --> checkFrederick{Check Frederick's Schedule}\n    checkFrederick --> |Free| frederickFree[Frederick is free!]\n    checkFrederick --> |Busy| frederickBusy((Circus Time))\n\n    frederickFree --> checkLurch{Check Lurch's Family Status}\n    frederickBusy -.-> planAhead[Plan gaming session for next Frederick's availability]\n\n    checkLurch --> |Kids asleep & Partner asleep| lurchCanPlay[Lurch can play muted!]\n    checkLurch --> |Otherwise| adjustVolume[Adjust Lurch's gaming volume]\n\n    lurchCanPlay --> checkLaino{Check Laino's Mood}\n    adjustVolume -.-> lurchCanPlay\n\n    checkLaino --> |Up for BG3| lainoReady[Laino is ready!]\n    checkLaino --> |Sleeping or Reading| lureLainoWithLore[Lure Laino with game lore]\n\n    lainoReady --> thammuzCanPlay[Thammuz is always ready]\n    lureLainoWithLore --> thammuzCanPlay\n\n    thammuzCanPlay --> scheduleSession{Schedule Session}\n    scheduleSession --> |Successful| gameOn[Lets venture into Baldur's Gate!]\n    scheduleSession --> |Conflict| negotiation[Negotiate Time Slots]\n\n    negotiation -.-> |Timer Negotiated| gameOn\n    negotiation -.-> |Stalemate| planAhead\n\n    gameOn --> End((END))\n    planAhead -.-> |New Time Found| scheduleSession"}}
