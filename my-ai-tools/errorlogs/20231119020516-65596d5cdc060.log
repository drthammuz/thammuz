{"user_input":"a->b"}
{"gpt_response":{"id":"chatcmpl-8MRTRxIgnII2TswqXO2zuBY1dKuBa","object":"chat.completion","created":1700359517,"model":"gpt-4-1106-preview","choices":[{"index":0,"message":{"role":"assistant","content":"flowchart TB\n  a --> b\n  b --> decision1{Is B Okay?}\n  decision1 -- Yes --> process1[Process A]\n  decision1 -- No --> process2[Process B]\n  process1 --> decision2{Decision 2}\n  process2 --> decision3{Decision 3}\n  decision2 -- Option 1 --> END\n  decision2 -- Option 2 --> operation1[Operation A]\n  decision3 -- Another Option --> operation2[Operation B]\n  operation1 --> join1[Join A and B Ops] --> END\n  operation2 --> join1\n  END --> finalDecision{Final Decision}\n  finalDecision -- Approve --> success[Success!]\n  finalDecision -- Reject --> fail[Failure!]\n  success --> conclusion(Conclusion)\n  fail --> conclusion\n  conclusion --> END_FLOW[END FLOW]\n"},"finish_reason":"stop"}],"usage":{"prompt_tokens":423,"completion_tokens":180,"total_tokens":603},"system_fingerprint":"fp_a24b4d720c"}}
{"mermaid_syntax":"flowchart TB\n  a --> b\n  b --> decision1{Is B Okay?}\n  decision1 -- Yes --> process1[Process A]\n  decision1 -- No --> process2[Process B]\n  process1 --> decision2{Decision 2}\n  process2 --> decision3{Decision 3}\n  decision2 -- Option 1 --> END\n  decision2 -- Option 2 --> operation1[Operation A]\n  decision3 -- Another Option --> operation2[Operation B]\n  operation1 --> join1[Join A and B Ops] --> END\n  operation2 --> join1\n  END --> finalDecision{Final Decision}\n  finalDecision -- Approve --> success[Success!]\n  finalDecision -- Reject --> fail[Failure!]\n  success --> conclusion(Conclusion)\n  fail --> conclusion\n  conclusion --> END_FLOW[END FLOW]"}
{"mermaid_cli_error":"Command failed: docker run --rm -v \/root\/mermaid_workspace:\/data minlag\/mermaid-cli:10.6.0 mmdc -i \/data\/mermaid_1700359524630.mmd -o \/data\/image_1700359524630.svg\n\nError: Evaluation failed: Error: Parse error on line 1:\nflowchart TB\\n  a --> b\\n  b -->\n------------^\nExpecting 'SEMI', 'NEWLINE', 'SPACE', got 'NODE_STRING'\n    at Lh.parseError (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:98:21111)\n    at Lh.parse (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:100:179)\n    at PUt.parse (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:512)\n    at new PUt (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:247)\n    at GjA (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:824)\n    at async Object.N2e [as render] (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:87:1146)\n    at ExecutionContext._ExecutionContext_evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ExecutionContext.js:254:15)\n    at process.processTicksAndRejections (node:internal\/process\/task_queues:95:5)\n    at async ExecutionContext.evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ExecutionContext.js:143:16)\n    at async CDPJSHandle.evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/JSHandle.js:56:16)\n    at async CDPElementHandle.$eval (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ElementHandle.js:86:24)\n    at async renderMermaid (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:246:22)\n    at async parseMMD (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:218:20)\n    at async run (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:479:20)\n    at async cli (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:184:3)\n\n","error_details":"\nError: Evaluation failed: Error: Parse error on line 1:\nflowchart TB\\n  a --> b\\n  b -->\n------------^\nExpecting 'SEMI', 'NEWLINE', 'SPACE', got 'NODE_STRING'\n    at Lh.parseError (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:98:21111)\n    at Lh.parse (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:100:179)\n    at PUt.parse (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:512)\n    at new PUt (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:247)\n    at GjA (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:64:824)\n    at async Object.N2e [as render] (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/dist\/index.html:87:1146)\n    at ExecutionContext._ExecutionContext_evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ExecutionContext.js:254:15)\n    at process.processTicksAndRejections (node:internal\/process\/task_queues:95:5)\n    at async ExecutionContext.evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ExecutionContext.js:143:16)\n    at async CDPJSHandle.evaluate (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/JSHandle.js:56:16)\n    at async CDPElementHandle.$eval (file:\/\/\/home\/mermaidcli\/node_modules\/puppeteer-core\/lib\/esm\/puppeteer\/common\/ElementHandle.js:86:24)\n    at async renderMermaid (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:246:22)\n    at async parseMMD (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:218:20)\n    at async run (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:479:20)\n    at async cli (file:\/\/\/home\/mermaidcli\/node_modules\/@mermaid-js\/mermaid-cli\/src\/index.js:184:3)\n\n","used_syntax":"flowchart TB\\n  a --> b\\n  b --> decision1{Is B Okay?}\\n  decision1 -- Yes --> process1[Process A]\\n  decision1 -- No --> process2[Process B]\\n  process1 --> decision2{Decision 2}\\n  process2 --> decision3{Decision 3}\\n  decision2 -- Option 1 --> END\\n  decision2 -- Option 2 --> operation1[Operation A]\\n  decision3 -- Another Option --> operation2[Operation B]\\n  operation1 --> join1[Join A and B Ops] --> END\\n  operation2 --> join1\\n  END --> finalDecision{Final Decision}\\n  finalDecision -- Approve --> success[Success!]\\n  finalDecision -- Reject --> fail[Failure!]\\n  success --> conclusion(Conclusion)\\n  fail --> conclusion\\n  conclusion --> END_FLOW[END FLOW]\""}
